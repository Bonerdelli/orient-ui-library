/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/operator/wizard/frameSimple/{orderId}/reject': {
    post: operations['reject']
  }
  '/operator/wizard/frameSimple/{orderId}/3': {
    post: operations['postStep3']
  }
  '/operator/wizard/frameSimple/{orderId}/2': {
    post: operations['postStep2']
  }
  '/operator/wizard/frameSimple/{orderId}/1': {
    post: operations['postStep1']
  }
  '/operator/wizard/frame/{orderId}/reject': {
    post: operations['reject_1']
  }
  '/operator/wizard/frame/{orderId}/5': {
    post: operations['postStep3_1']
  }
  '/operator/wizard/frame/{orderId}/3': {
    post: operations['postStep3_2']
  }
  '/operator/wizard/frame/{orderId}/2': {
    post: operations['postStep2_1']
  }
  '/operator/wizard/frame/{orderId}/1': {
    post: operations['postStep1_1']
  }
  '/operator/rejectReason/list': {
    post: operations['list']
  }
  '/operator/order/frameSimple/list': {
    post: operations['getFrameSimple']
  }
  '/operator/order/frame/list': {
    post: operations['getFrame']
  }
  '/operator/order/factor/list': {
    post: operations['getFactor']
  }
  '/operator/customer/list': {
    post: operations['getCustomers']
  }
  '/operator/bank/{id}': {
    get: operations['getBank']
    post: operations['update']
  }
  '/operator/bank/list': {
    post: operations['getBanks']
  }
  '/customer/company/{companyId}/questionnaire': {
    get: operations['getQuest']
    post: operations['saveQuest']
  }
  '/customer/company/{companyId}/order/list': {
    post: operations['getOrders']
  }
  '/client/upload': {
    post: operations['upload']
  }
  '/client/customer/list': {
    post: operations['getCustomers_1']
  }
  '/client/company/{companyId}/wizard/frame': {
    post: operations['postNew']
  }
  '/client/company/{companyId}/wizard/frameSimple': {
    post: operations['postNew_1']
  }
  '/client/company/{companyId}/wizard/frameSimple/{orderId}/upload/{typeId}': {
    post: operations['uploadFile']
  }
  '/client/company/{companyId}/wizard/frameSimple/{orderId}/requisites': {
    post: operations['step2AttachRequisites']
  }
  '/client/company/{companyId}/wizard/frameSimple/{orderId}/founder': {
    post: operations['step2AttachFounder']
  }
  '/client/company/{companyId}/wizard/frameSimple/{orderId}/cancel': {
    post: operations['cancel']
  }
  '/client/company/{companyId}/wizard/frameSimple/{orderId}/3': {
    post: operations['postStep3_3']
  }
  '/client/company/{companyId}/wizard/frameSimple/{orderId}/2': {
    post: operations['postStep2_2']
  }
  '/client/company/{companyId}/wizard/frame/{orderId}/upload/{typeId}': {
    post: operations['uploadFile_1']
  }
  '/client/company/{companyId}/wizard/frame/{orderId}/requisites': {
    post: operations['step2AttachRequisites_1']
  }
  '/client/company/{companyId}/wizard/frame/{orderId}/founder': {
    post: operations['step2AttachFounder_1']
  }
  '/client/company/{companyId}/wizard/frame/{orderId}/cancel': {
    post: operations['cancel_1']
  }
  '/client/company/{companyId}/wizard/frame/{orderId}/3': {
    post: operations['postStep3_4']
  }
  '/client/company/{companyId}/wizard/frame/{orderId}/2': {
    post: operations['postStep2_3']
  }
  '/client/company/{companyId}/requisites': {
    get: operations['requisites']
    post: operations['saveRequisites']
  }
  '/client/company/{companyId}/questionnaire': {
    get: operations['getQuest_1']
    post: operations['saveQuest_1']
  }
  '/client/company/{companyId}/order/{orderId}/document/upload/{typeId}': {
    post: operations['uploadFile_2']
  }
  '/client/company/{companyId}/order/{orderId}/document/attach': {
    post: operations['attach']
  }
  '/client/company/{companyId}/order/{orderId}/document/attach/{typeId}': {
    post: operations['typedAttach']
  }
  '/client/company/{companyId}/order/ready_to_factor/list': {
    post: operations['getOrdersCompleted']
  }
  '/client/company/{companyId}/order/list': {
    post: operations['getOrders_1']
  }
  '/client/company/{companyId}/offer/list': {
    post: operations['getOrders_2']
  }
  '/client/company/{companyId}/founder': {
    get: operations['founders']
    post: operations['saveFounder']
  }
  '/client/company/{companyId}/document/{typeId}': {
    post: operations['uploadCompanyDocument']
  }
  '/client/company/{companyId}/contacts': {
    get: operations['contacts']
    post: operations['saveContacts']
  }
  '/bank/{bankId}': {
    get: operations['getBank_1']
    post: operations['update_1']
  }
  '/bank/{bankId}/wizard/frameSimple/{orderId}/reject': {
    post: operations['reject_2']
  }
  '/bank/{bankId}/wizard/frameSimple/{orderId}/2': {
    post: operations['postStep2_4']
  }
  '/bank/{bankId}/wizard/frameSimple/{orderId}/1': {
    post: operations['postStep1_2']
  }
  '/bank/{bankId}/wizard/frame/{orderId}/reject': {
    post: operations['reject_3']
  }
  '/bank/{bankId}/wizard/frame/{orderId}/4': {
    post: operations['postStep4']
  }
  '/bank/{bankId}/wizard/frame/{orderId}/3': {
    post: operations['postStep3_5']
  }
  '/bank/{bankId}/wizard/frame/{orderId}/2': {
    post: operations['postStep2_5']
  }
  '/bank/{bankId}/wizard/frame/{orderId}/1': {
    post: operations['postStep1_3']
  }
  '/bank/{bankId}/rejectReason/list': {
    post: operations['list_1']
  }
  '/bank/{bankId}/order/frameSimple/list': {
    post: operations['getFrameSimple_1']
  }
  '/bank/{bankId}/order/frame/list': {
    post: operations['getFrame_1']
  }
  '/bank/{bankId}/order/factor/list': {
    post: operations['getFactor_1']
  }
  '/auth/refresh': {
    post: operations['refresh']
  }
  '/auth/login': {
    post: operations['login']
  }
  '/operator': {
    get: operations['testOper']
  }
  '/operator/wizard/frameSimple/{orderId}': {
    get: operations['getStep']
  }
  '/operator/wizard/frameSimple/{orderId}/{step}': {
    get: operations['getStep_1']
  }
  '/operator/wizard/frame/{orderId}': {
    get: operations['getStep_2']
  }
  '/operator/wizard/frame/{orderId}/{step}': {
    get: operations['getStep_3']
  }
  '/operator/order/graph/{orderType}': {
    get: operations['getForStatus']
  }
  '/operator/order/graph/{orderType}/{statusCode}': {
    get: operations['getForStatus_1']
  }
  '/dictionary/{name}': {
    get: operations['byKey']
  }
  '/dictionary/all': {
    get: operations['all']
  }
  '/common': {
    get: operations['testCommon']
  }
  '/common/download/order/{orderId}/{documentId}': {
    get: operations['getOrderDocument']
  }
  '/common/download/company/{companyId}/{documentId}': {
    get: operations['getCompanyDocument']
  }
  '/client': {
    get: operations['testSupp']
  }
  '/client/file/{fileId}': {
    get: operations['get']
  }
  '/client/company': {
    get: operations['all_1']
  }
  '/client/company/{companyId}': {
    get: operations['instance']
  }
  '/client/company/{companyId}/wizard/frameSimple/{orderId}': {
    get: operations['getStep_4']
  }
  '/client/company/{companyId}/wizard/frameSimple/{orderId}/{step}': {
    get: operations['getStep_5']
  }
  '/client/company/{companyId}/wizard/frame/{orderId}': {
    get: operations['getStep_6']
  }
  '/client/company/{companyId}/wizard/frame/{orderId}/{step}': {
    get: operations['getStep_7']
  }
  '/client/company/{companyId}/requisites/{reqId}': {
    get: operations['requisite']
    delete: operations['founderDelete']
  }
  '/client/company/{companyId}/order/{orderId}/document': {
    get: operations['getDocuments']
  }
  '/client/company/{companyId}/founder/{founderId}': {
    get: operations['founder']
    delete: operations['founderDelete_1']
  }
  '/client/company/{companyId}/document': {
    get: operations['getCompanyDocuments']
  }
  '/bank/{bankId}/wizard/frameSimple/{orderId}': {
    get: operations['getStep_8']
  }
  '/bank/{bankId}/wizard/frameSimple/{orderId}/{step}': {
    get: operations['getStep_9']
  }
  '/bank/{bankId}/wizard/frame/{orderId}': {
    get: operations['getStep_10']
  }
  '/bank/{bankId}/wizard/frame/{orderId}/{step}': {
    get: operations['getStep_11']
  }
  '/client/company/{companyId}/order/{orderId}/document/{docId}': {
    delete: operations['deleteDocument']
  }
  '/client/company/{companyId}/document/{docId}': {
    delete: operations['deleteCompanyDocument']
  }
}

export interface components {
  schemas: {
    RejectOrderDto: {
      /** Format: int64 */
      rejectReasonId: number
      rejectComment?: string
    }
    ServerResponseUnit: {
      success: boolean
      data?: components['schemas']['Unit']
    }
    Unit: { [key: string]: unknown }
    OperatorFrameSimpleStep2To3Request: {
      /** Format: int64 */
      customerId: number
      /** Format: int64 */
      bankId: number
      conditionCode: string
      /** Format: double */
      percentYear?: number
      /** Format: double */
      percentOverall?: number
      /** Format: double */
      percentDiscount?: number
      /** Format: date */
      startDate: string
    }
    OperatorFrameStep5ToRequest: {
      bankIds: number[]
    }
    OperatorFrameStep3To5Request: {
      stopFactors: components['schemas']['OrderStopFactorRequest'][]
    }
    OrderStopFactorRequest: {
      /** Format: int64 */
      stopFactorId: number
      isOk: boolean
    }
    OperatorFrameStep2To3Request: {
      documentStatuses: components['schemas']['OrderDocumentStatusRequest'][]
    }
    OrderDocumentStatusRequest: {
      /** Format: int64 */
      documentId: number
      documentStatus: string
    }
    RejectReasonGridRequest: {
      /** Format: int32 */
      limit: number
      /** Format: int32 */
      page: number
      orderType: string
    }
    GridResponseGridRow: {
      /** Format: int32 */
      total: number
      data: components['schemas']['GridRow'][]
    }
    GridRow: { [key: string]: unknown }
    ServerResponseGridResponseGridRow: {
      success: boolean
      data?: components['schemas']['GridResponseGridRow']
    }
    OrderGridRequest: {
      /** Format: int32 */
      limit: number
      /** Format: int32 */
      page: number
      statuses?: string[]
    }
    CustomerGridRequest: {
      /** Format: int32 */
      limit: number
      /** Format: int32 */
      page: number
      inn?: string
    }
    BankActiveRequest: {
      isActive: boolean
    }
    JBank: {
      /** Format: int64 */
      id?: number
      name?: string
      shortName?: string
      inn?: string
      mfo?: string
      legalAddress?: string
      licenseNumber?: string
      /** Format: date */
      licenseDate?: string
      phoneNumber?: string
      site?: string
      email?: string
      isActive?: boolean
      /** Format: date-time */
      createdAt?: string
      /** Format: date-time */
      updatedAt?: string
    }
    ServerResponseJBank: {
      success: boolean
      data?: components['schemas']['JBank']
    }
    BankGridRequest: {
      /** Format: int32 */
      limit: number
      /** Format: int32 */
      page: number
      name?: string
    }
    CompanyQuestionnaire: {
      /** Format: int64 */
      id?: number
      /** Format: int64 */
      companyId?: number
      /** Format: int32 */
      averageEmployeesCountId: number
      /** Format: int32 */
      taxationSystemId: number
      /** Format: int32 */
      paymentFormId: number
      belongsToHoldings: boolean
      holdingName?: string
      headCompanyName?: string
      headCompanyInn?: string
      hasCredits: boolean
      credits?: components['schemas']['CompanyQuestionnaireCredit'][]
      creditExpirations?: components['schemas']['CompanyQuestionnaireCreditExpiration'][]
      hasTrials: boolean
      trials?: components['schemas']['CompanyQuestionnaireTrial'][]
      suppliers?: components['schemas']['CompanyQuestionnaireSupplier'][]
      buyers?: components['schemas']['CompanyQuestionnaireBuyer'][]
      hasEasyFinansIndividuals: boolean
      easyFinanceIndividuals?: components['schemas']['CompanyQuestionnaireEfIndividual'][]
      hasEasyFinansLegals: boolean
      easyFinanceLegals?: components['schemas']['CompanyQuestionnaireEfLegal'][]
    }
    CompanyQuestionnaireBuyer: {
      name: string
      term: string
      /** Format: int32 */
      paymentFormId: number
    }
    CompanyQuestionnaireCredit: {
      bankName: string
      creditAmount: number
      remainAmount: number
      /** Format: date */
      creditDate: string
      isExpired: boolean
    }
    CompanyQuestionnaireCreditExpiration: {
      /** Format: int32 */
      expirationId: number
      isExpired: boolean
      reason: string
    }
    CompanyQuestionnaireEfIndividual: {
      memberName: string
      relativeName: string
      relation: string
    }
    CompanyQuestionnaireEfLegal: {
      memberName: string
    }
    CompanyQuestionnaireSupplier: {
      name: string
      term: string
      /** Format: int32 */
      paymentFormId: number
    }
    CompanyQuestionnaireTrial: {
      complainant: string
      reason: string
      amount: number
      result: string
    }
    ServerResponseUUID: {
      success: boolean
      /** Format: uuid */
      data?: string
    }
    ClientFrameStep1To2Request: {
      /** Format: int64 */
      customerId: number
    }
    ServerResponseWizardPostResponse: {
      success: boolean
      data?: components['schemas']['WizardPostResponse']
    }
    WizardPostResponse: { [key: string]: unknown }
    AttachRequisitesRequest: {
      /** Format: int64 */
      requisitesId: number
    }
    AttachFounderRequest: {
      /** Format: int64 */
      founderId: number
    }
    CompanyRequisitesSaveRequest: {
      /** Format: int64 */
      id?: number
      bankName: string
      mfo: string
      accountNumber: string
    }
    JCompanyRequisites: {
      /** Format: int64 */
      id?: number
      /** Format: int64 */
      companyId?: number
      bankName?: string
      mfo?: string
      accountNumber?: string
    }
    ServerResponseJCompanyRequisites: {
      success: boolean
      data?: components['schemas']['JCompanyRequisites']
    }
    JOrderDocument: {
      /** Format: int64 */
      id?: number
      /** Format: int64 */
      typeId?: number
      /** Format: uuid */
      fileUuid?: string
      status?: string
      /** Format: int64 */
      orderId?: number
      clientSigned?: boolean
      bankSigned?: boolean
      customerSigned?: boolean
    }
    ServerResponseJOrderDocument: {
      success: boolean
      data?: components['schemas']['JOrderDocument']
    }
    ServerResponseListJOrderDocument: {
      success: boolean
      data?: components['schemas']['JOrderDocument'][]
    }
    GridRequest: {
      /** Format: int32 */
      limit: number
      /** Format: int32 */
      page: number
    }
    OfferGridRequest: {
      /** Format: int32 */
      limit: number
      /** Format: int32 */
      page: number
      /** Format: int64 */
      orderId: number
    }
    CompanyFounderSaveRequest: {
      /** Format: int64 */
      id?: number
      lastName: string
      firstName: string
      secondName?: string
      inn: string
      /** Format: double */
      ownership: number
      isIo: boolean
      isAttorney: boolean
      passportType: string
      passportSeries?: string
      passportNumber: string
      /** Format: date */
      passportIssueDate: string
      passportIssuePlace?: string
      passportIssuerCode: string
      passportIssuerName: string
      /** Format: date */
      birthdate: string
      birthplace: string
      isMaleGender: boolean
      /** Format: date */
      passportValidDate?: string
      nationality?: string
      address: string
    }
    JCompanyFounder: {
      /** Format: int64 */
      id?: number
      /** Format: date-time */
      createdAt?: string
      /** Format: date-time */
      updatedAt?: string
      /** Format: int64 */
      companyId?: number
      lastName?: string
      firstName?: string
      secondName?: string
      inn?: string
      /** Format: double */
      ownership?: number
      isIo?: boolean
      isAttorney?: boolean
      passportType?: string
      passportSeries?: string
      passportNumber?: string
      /** Format: date */
      passportIssueDate?: string
      passportIssuePlace?: string
      passportIssuerCode?: string
      passportIssuerName?: string
      /** Format: date */
      birthdate?: string
      birthplace?: string
      isMaleGender?: boolean
      /** Format: date */
      passportValidDate?: string
      nationality?: string
      address?: string
    }
    ServerResponseJCompanyFounder: {
      success: boolean
      data?: components['schemas']['JCompanyFounder']
    }
    JCompanyDocument: {
      /** Format: int64 */
      id?: number
      /** Format: int64 */
      companyId?: number
      /** Format: int64 */
      typeId?: number
      /** Format: uuid */
      fileUuid?: string
      status?: string
    }
    ServerResponseJCompanyDocument: {
      success: boolean
      data?: components['schemas']['JCompanyDocument']
    }
    CompanyContactsSaveRequest: {
      primaryEmail?: string
      additionalEmail?: string
      primaryPhone?: string
      additionalPhone?: string
      site?: string
    }
    JCompanyContacts: {
      /** Format: int64 */
      id?: number
      /** Format: date-time */
      createdAt?: string
      /** Format: date-time */
      updatedAt?: string
      /** Format: int64 */
      companyId?: number
      primaryEmail?: string
      additionalEmail?: string
      primaryPhone?: string
      additionalPhone?: string
      site?: string
    }
    ServerResponseJCompanyContacts: {
      success: boolean
      data?: components['schemas']['JCompanyContacts']
    }
    BankUpdateRequest: {
      name: string
      shortName?: string
      inn: string
      mfo: string
      legalAddress: string
      licenseNumber?: string
      /** Format: date */
      licenseDate?: string
      phoneNumber?: string
      site?: string
      email?: string
    }
    BankFrameStep3To4Request: {
      conditionCode: string
      /** Format: double */
      percentYear?: number
      /** Format: double */
      percentOverall?: number
      /** Format: double */
      percentDiscount?: number
      /** Format: date */
      startDate: string
    }
    TokenRefreshDto: {
      refreshToken: string
    }
    AuthResponseDto: {
      accessToken: string
      refreshToken: string
    }
    ServerResponseAuthResponseDto: {
      success: boolean
      data?: components['schemas']['AuthResponseDto']
    }
    AuthRequestDto: {
      login: string
      password: string
    }
    ServerResponseLong: {
      success: boolean
      /** Format: int64 */
      data?: number
    }
    ServerResponseWizardGetResponseWrapper: {
      success: boolean
      data?: components['schemas']['WizardGetResponseWrapper']
    }
    WizardGetResponse: { [key: string]: unknown }
    WizardGetResponseWrapper: {
      /** Format: int32 */
      step: number
      data: components['schemas']['WizardGetResponse']
    }
    OrderStatusGraphAxis: {
      from: components['schemas']['OrderStatusGraphVertex']
      to: components['schemas']['OrderStatusGraphVertex'][]
    }
    OrderStatusGraphVertex: {
      code: string
      name: string
    }
    ServerResponseSetOrderStatusGraphAxis: {
      success: boolean
      data?: components['schemas']['OrderStatusGraphAxis'][]
    }
    ServerResponseListObject: {
      success: boolean
      data?: { [key: string]: unknown }[]
    }
    ServerResponseMapStringListObject: {
      success: boolean
      data?: { [key: string]: { [key: string]: unknown }[] }
    }
    ServerResponseCompanyQuestionnaire: {
      success: boolean
      data?: components['schemas']['CompanyQuestionnaire']
    }
    ServerResponseString: {
      success: boolean
      data?: string
    }
    JCompany: {
      /** Format: int64 */
      id?: number
      /** Format: date-time */
      createdAt?: string
      /** Format: date-time */
      updatedAt?: string
      fullName?: string
      shortName?: string
      inn?: string
      isMsp?: boolean
      capital?: number
      currencyCode?: string
      regAuthority?: string
      /** Format: date */
      regDate?: string
      regNumber?: string
      address?: string
      phones?: string
      email?: string
      opf?: string
      oked?: string
      soogu?: string
      soato?: string
      state?: string
    }
    ServerResponseListJCompany: {
      success: boolean
      data?: components['schemas']['JCompany'][]
    }
    ServerResponseJCompany: {
      success: boolean
      data?: components['schemas']['JCompany']
    }
    ServerResponseListJCompanyRequisites: {
      success: boolean
      data?: components['schemas']['JCompanyRequisites'][]
    }
    Info: {
      /** Format: int64 */
      documentId: number
      documentStatus: string
      /** Format: uuid */
      fileId: string
      fileStatus: string
      /** Format: date-time */
      createdAt: string
      clientSigned: boolean
      bankSigned: boolean
      customerSigned: boolean
    }
    OrderDocumentsResponse: {
      /** Format: int64 */
      typeId: number
      typeName: string
      info?: components['schemas']['Info']
    }
    ServerResponseListOrderDocumentsResponse: {
      success: boolean
      data?: components['schemas']['OrderDocumentsResponse'][]
    }
    ServerResponseListJCompanyFounder: {
      success: boolean
      data?: components['schemas']['JCompanyFounder'][]
    }
    CompanyDocumentsResponse: {
      /** Format: int64 */
      typeId: number
      type: string
      info?: components['schemas']['Info']
    }
    ServerResponseListCompanyDocumentsResponse: {
      success: boolean
      data?: components['schemas']['CompanyDocumentsResponse'][]
    }
    ServerResponseInteger: {
      success: boolean
      /** Format: int32 */
      data?: number
    }
  }
}

export interface operations {
  reject: {
    parameters: {
      path: {
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RejectOrderDto']
      }
    }
  }
  postStep3: {
    parameters: {
      path: {
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  postStep2: {
    parameters: {
      path: {
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OperatorFrameSimpleStep2To3Request']
      }
    }
  }
  postStep1: {
    parameters: {
      path: {
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  reject_1: {
    parameters: {
      path: {
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RejectOrderDto']
      }
    }
  }
  postStep3_1: {
    parameters: {
      path: {
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OperatorFrameStep5ToRequest']
      }
    }
  }
  postStep3_2: {
    parameters: {
      path: {
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OperatorFrameStep3To5Request']
      }
    }
  }
  postStep2_1: {
    parameters: {
      path: {
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OperatorFrameStep2To3Request']
      }
    }
  }
  postStep1_1: {
    parameters: {
      path: {
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  list: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RejectReasonGridRequest']
      }
    }
  }
  getFrameSimple: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OrderGridRequest']
      }
    }
  }
  getFrame: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OrderGridRequest']
      }
    }
  }
  getFactor: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OrderGridRequest']
      }
    }
  }
  getCustomers: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CustomerGridRequest']
      }
    }
  }
  getBank: {
    parameters: {
      path: {
        id: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJBank']
        }
      }
    }
  }
  update: {
    parameters: {
      path: {
        id: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJBank']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['BankActiveRequest']
      }
    }
  }
  getBanks: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['BankGridRequest']
      }
    }
  }
  getQuest: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseCompanyQuestionnaire']
        }
      }
    }
  }
  saveQuest: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CompanyQuestionnaire']
      }
    }
  }
  getOrders: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OrderGridRequest']
      }
    }
  }
  upload: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUUID']
        }
      }
    }
    requestBody: {
      content: {
        'multipart/form-data': {
          /** Format: binary */
          file: string
        }
      }
    }
  }
  getCustomers_1: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CustomerGridRequest']
      }
    }
  }
  postNew: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardPostResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ClientFrameStep1To2Request']
      }
    }
  }
  postNew_1: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardPostResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ClientFrameStep1To2Request']
      }
    }
  }
  uploadFile: {
    parameters: {
      path: {
        companyId: number
        orderId: number
        typeId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': {
          /** Format: binary */
          file: string
        }
      }
    }
  }
  step2AttachRequisites: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AttachRequisitesRequest']
      }
    }
  }
  step2AttachFounder: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AttachFounderRequest']
      }
    }
  }
  cancel: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  postStep3_3: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardPostResponse']
        }
      }
    }
  }
  postStep2_2: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardPostResponse']
        }
      }
    }
  }
  uploadFile_1: {
    parameters: {
      path: {
        companyId: number
        orderId: number
        typeId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': {
          /** Format: binary */
          file: string
        }
      }
    }
  }
  step2AttachRequisites_1: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AttachRequisitesRequest']
      }
    }
  }
  step2AttachFounder_1: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AttachFounderRequest']
      }
    }
  }
  cancel_1: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  postStep3_4: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardPostResponse']
        }
      }
    }
  }
  postStep2_3: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardPostResponse']
        }
      }
    }
  }
  requisites: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseListJCompanyRequisites']
        }
      }
    }
  }
  saveRequisites: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJCompanyRequisites']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CompanyRequisitesSaveRequest']
      }
    }
  }
  getQuest_1: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseCompanyQuestionnaire']
        }
      }
    }
  }
  saveQuest_1: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CompanyQuestionnaire']
      }
    }
  }
  uploadFile_2: {
    parameters: {
      path: {
        companyId: number
        orderId: number
        typeId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJOrderDocument']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': {
          /** Format: binary */
          file: string
        }
      }
    }
  }
  attach: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseListJOrderDocument']
        }
      }
    }
  }
  typedAttach: {
    parameters: {
      path: {
        companyId: number
        orderId: number
        typeId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseListJOrderDocument']
        }
      }
    }
  }
  getOrdersCompleted: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['GridRequest']
      }
    }
  }
  getOrders_1: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OrderGridRequest']
      }
    }
  }
  getOrders_2: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OfferGridRequest']
      }
    }
  }
  founders: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseListJCompanyFounder']
        }
      }
    }
  }
  saveFounder: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJCompanyFounder']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CompanyFounderSaveRequest']
      }
    }
  }
  uploadCompanyDocument: {
    parameters: {
      path: {
        companyId: number
        typeId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJCompanyDocument']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': {
          /** Format: binary */
          file: string
        }
      }
    }
  }
  contacts: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJCompanyContacts']
        }
      }
    }
  }
  saveContacts: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJCompanyContacts']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CompanyContactsSaveRequest']
      }
    }
  }
  getBank_1: {
    parameters: {
      path: {
        bankId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJBank']
        }
      }
    }
  }
  update_1: {
    parameters: {
      path: {
        bankId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJBank']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['BankUpdateRequest']
      }
    }
  }
  reject_2: {
    parameters: {
      path: {
        bankId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RejectOrderDto']
      }
    }
  }
  postStep2_4: {
    parameters: {
      path: {
        bankId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  postStep1_2: {
    parameters: {
      path: {
        bankId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  reject_3: {
    parameters: {
      path: {
        bankId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RejectOrderDto']
      }
    }
  }
  postStep4: {
    parameters: {
      path: {
        bankId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  postStep3_5: {
    parameters: {
      path: {
        bankId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['BankFrameStep3To4Request']
      }
    }
  }
  postStep2_5: {
    parameters: {
      path: {
        bankId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  postStep1_3: {
    parameters: {
      path: {
        bankId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  list_1: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['GridRequest']
      }
    }
  }
  getFrameSimple_1: {
    parameters: {
      path: {
        bankId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OrderGridRequest']
      }
    }
  }
  getFrame_1: {
    parameters: {
      path: {
        bankId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OrderGridRequest']
      }
    }
  }
  getFactor_1: {
    parameters: {
      path: {
        bankId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseGridResponseGridRow']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OrderGridRequest']
      }
    }
  }
  refresh: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseAuthResponseDto']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TokenRefreshDto']
      }
    }
  }
  login: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseAuthResponseDto']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AuthRequestDto']
      }
    }
  }
  testOper: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseLong']
        }
      }
    }
  }
  getStep: {
    parameters: {
      path: {
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  getStep_1: {
    parameters: {
      path: {
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  getStep_2: {
    parameters: {
      path: {
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  getStep_3: {
    parameters: {
      path: {
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  getForStatus: {
    parameters: {
      path: {
        orderType: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseSetOrderStatusGraphAxis']
        }
      }
    }
  }
  getForStatus_1: {
    parameters: {
      path: {
        orderType: string
        statusCode: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseSetOrderStatusGraphAxis']
        }
      }
    }
  }
  byKey: {
    parameters: {
      path: {
        name: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseListObject']
        }
      }
    }
  }
  all: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseMapStringListObject']
        }
      }
    }
  }
  testCommon: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseLong']
        }
      }
    }
  }
  getOrderDocument: {
    parameters: {
      path: {
        orderId: number
        documentId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': { [key: string]: unknown }
        }
      }
    }
  }
  getCompanyDocument: {
    parameters: {
      path: {
        companyId: number
        documentId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': { [key: string]: unknown }
        }
      }
    }
  }
  testSupp: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseLong']
        }
      }
    }
  }
  get: {
    parameters: {
      path: {
        fileId: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseString']
        }
      }
    }
  }
  all_1: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseListJCompany']
        }
      }
    }
  }
  instance: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJCompany']
        }
      }
    }
  }
  getStep_4: {
    parameters: {
      path: {
        companyId: number
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  getStep_5: {
    parameters: {
      path: {
        companyId: number
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  getStep_6: {
    parameters: {
      path: {
        companyId: number
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  getStep_7: {
    parameters: {
      path: {
        companyId: number
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  requisite: {
    parameters: {
      path: {
        companyId: number
        reqId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJCompanyRequisites']
        }
      }
    }
  }
  founderDelete: {
    parameters: {
      path: {
        companyId: number
        reqId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  getDocuments: {
    parameters: {
      path: {
        companyId: number
        orderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseListOrderDocumentsResponse']
        }
      }
    }
  }
  founder: {
    parameters: {
      path: {
        companyId: number
        founderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseJCompanyFounder']
        }
      }
    }
  }
  founderDelete_1: {
    parameters: {
      path: {
        companyId: number
        founderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
  getCompanyDocuments: {
    parameters: {
      path: {
        companyId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseListCompanyDocumentsResponse']
        }
      }
    }
  }
  getStep_8: {
    parameters: {
      path: {
        bankId: number
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  getStep_9: {
    parameters: {
      path: {
        bankId: number
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  getStep_10: {
    parameters: {
      path: {
        bankId: number
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  getStep_11: {
    parameters: {
      path: {
        bankId: number
        orderId: number
        step: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseWizardGetResponseWrapper']
        }
      }
    }
  }
  deleteDocument: {
    parameters: {
      path: {
        companyId: number
        orderId: number
        docId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseInteger']
        }
      }
    }
  }
  deleteCompanyDocument: {
    parameters: {
      path: {
        companyId: number
        docId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['ServerResponseUnit']
        }
      }
    }
  }
}

export interface external {}
